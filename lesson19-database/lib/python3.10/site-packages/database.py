ACCESSLIST = ["read", "write", "readwrite"]

class DatabaseRecord():


class Record:
    def __init__(self, data) -> None:
        self.data = data

    def __str__(self) -> str:
        return '|'.join(self.data)
    
    @classmethod
    def from_string(cls, string: str) -> 'Record':
        data = string.split('|')
        return cls(data)

class Roles:
    def __init__(self, name, password, access) -> None:
        if(access in ACCESSLIST):
            self.name = name
            self.password = password
            self.access = access
        else:
            return 1
        
    def __str__(self) -> str:
        return f"{self.name}, {self.password}"

class Database:
    def __init__(self, name) -> None:
        self.data = f"{name}-db.txt"
        data = open(f"{name}-db.txt", "x")
        self.__name = name
        self.admins = []
        data.write(f"dbname: {self.__name}\nadmins: {self.admins}")

    def setAdmin(self, admin, password, access):
        self.admins.append(Roles(admin, password, access))

    def editAdmin(self, admin, password, access):
        if(access in ACCESSLIST):
            self.admins.remove(Roles(admin, password))
            self.admins.append(Roles(admin, password, access))
        else:
            return 1
    
    def createRecord(self, data: Record):
        f = open(self.data, "w")

        

        
